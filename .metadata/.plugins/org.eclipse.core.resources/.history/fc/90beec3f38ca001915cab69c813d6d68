package com.rmh.circle;
@SuppressWarnings("unchecked")
public class CircleDeque<E> {
	private int front;
	private int size;
	private E[] elements;
	private static final int DEFAULT_CAPACITY = 10;


	public CircleDeque() {
		
		elements = (E[]) new Object[DEFAULT_CAPACITY];
	}
	
	public int size() {
		return size;
	}
	
	public boolean isEmpty() {
		return size == 0;
	}
	
	/**
	 * 从尾部入队
	 * @param element
	 */
	public void enQueueRear(E element) {
		list.add(element);
	}
	/**
	 * 从头部出队
	 * @return
	 */
	public E deQueueFront() {
		E e =list.get(0);
		list.remove(0);
		return e;
	}
	
	public void enQueueFront(E element) {
		list.add(0,element);
	}
	
	
	public E deQueueRear() {
		E e =list.get(list.size() - 1);
		list.remove(list.size() - 1);
		return e;
	}
	
	public E front() {
		return  elements[front];
	}
	
	public E rear() {
		returne lements[(front + size - 1) % elements.length];
	}
	
}
